<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <name>camunda BPM - Apache Camel Integration (CDI)</name>
    <artifactId>camunda-bpm-camel-cdi</artifactId>

    <parent>
        <groupId>org.camunda.bpm.extension.camel</groupId>
        <artifactId>camunda-bpm-camel</artifactId>
        <version>0.9.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <skipITs>true</skipITs>
        <quarkus.version>3.2.10.Final</quarkus.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.quarkus.platform</groupId>
                <artifactId>quarkus-bom</artifactId>
                <version>${quarkus.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.camunda.bpm.extension.camel</groupId>
            <artifactId>camunda-bpm-camel-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine</artifactId>
            <version>${camunda-bpm.version}</version>
            <scope>provided</scope>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.camunda.bpm</groupId>-->
<!--            <artifactId>camunda-engine-cdi</artifactId>-->
<!--            <version>${camunda-bpm.version}</version>-->
<!--        </dependency>-->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${sl4j.version}</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.slf4j</groupId>-->
<!--            <artifactId>jcl-over-slf4j</artifactId>-->
<!--            <version>${sl4j.version}</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.slf4j</groupId>-->
<!--            <artifactId>slf4j-log4j12</artifactId>-->
<!--            <version>${sl4j.version}</version>-->
<!--        </dependency>-->
        <!-- Apache Camel -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <!-- Test dependencies -->
        <dependency>
            <groupId>org.camunda.bpm.quarkus</groupId>
            <artifactId>camunda-bpm-quarkus-engine</artifactId>
            <version>${camunda-bpm.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.quarkus</groupId>
            <artifactId>camel-quarkus</artifactId>
            <version>3.2.3</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-test-h2</artifactId>
            <version>${quarkus.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jdbc-h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <version>${quarkus.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-arc</artifactId>
            <version>${quarkus.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.quarkus</groupId>
            <artifactId>camel-quarkus-mock</artifactId>
            <version>3.8.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm.extension.camel</groupId>
            <artifactId>camunda-bpm-camel-common-tests</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-jsr223</artifactId>
            <version>3.0.20</version>
            <scope>test</scope>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.apache.camel</groupId>-->
<!--            <artifactId>camel-mvel</artifactId>-->
<!--            <version>${camel.version}</version>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>com.fasterxml.uuid</groupId>-->
<!--            <artifactId>java-uuid-generator</artifactId>-->
<!--            <version>4.0.1</version>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.easytesting</groupId>-->
<!--            <artifactId>fest-assert-core</artifactId>-->
<!--            <version>2.0M10</version>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
            <version>2.0.1</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Plugin for integration tests. Defaults to in include all "**/*IT.java" -->
            <!-- See http://maven.apache.org/plugins/maven-failsafe-plugin/examples/inclusion-exclusion.html -->

            <!-- Integration tests are disabled by default.
                 They require a running JBoss AS 7.1.2 instance listening to default ports.
                 Set -DskipITs=false on the Maven command line to enable the tests.
            -->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <!-- See https://community.jboss.org/thread/198980 -->
                    <argLine>-Djava.util.logging.config.file=${basedir}/src/test/resources/logging.properties</argLine>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>failsafe-integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>failsafe-verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!--            <plugin>-->
<!--                <artifactId>maven-surefire-plugin</artifactId>-->
<!--                <version>3.2.5</version>-->
<!--                <configuration>-->
<!--                    <systemPropertyVariables>-->
<!--                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>-->
<!--                    </systemPropertyVariables>-->
<!--                    <failIfNoTests>true</failIfNoTests>-->
<!--                    <trimStackTrace>false</trimStackTrace>-->
<!--                    <redirectTestOutputToFile>true</redirectTestOutputToFile>-->
<!--                    <argLine>-Djava.awt.headless=true -Xmx512m</argLine>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>
</project>
